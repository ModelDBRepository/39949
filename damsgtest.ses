load_file("nrngui.hoc")
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ArtCellGUI[0]
{
load_file("netbild.hoc")
}
ocbox_ = new ArtCellGUI(1)
{object_push(ocbox_)}
{
tobj = new MechanismStandard("NetStim")
tobj.set("interval", 10, 0)
tobj.set("number", 1, 0)
tobj.set("start", 50, 0)
tobj.set("noise", 0, 0)
}
{append(tobj, "R")}
{object_pop()}
{
ocbox_.map("ArtCellGUI[0]", 6, 372, 449.28, 291.84)
}
objref ocbox_
//End ArtCellGUI[0]


//Begin NetReadyCellGUI[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new NetReadyCellGUI(1)}
{ocbox_.tobj = new CellBuild(1)}
{object_push(ocbox_.tobj)}
{
version(5.1)
continuous = 0
}
{object_push(topol)}
{
first = 0
slist.remove_all()
sname = "dend"
objref tobj
}
{
tobj = new CellBuildSection("soma",0, 0, tobj, 0) slist.append(tobj)
  tobj.position(0,0,15,0) tobj.lx=7.5 tobj.ly=0 tobj.i3d=0
all_init()
}
for i=0, slist.count-1 {slist.object(i).rdses()}
{object_pop()}
{
}
{object_push(subsets)}
{first = 0}
{consist()}
{object_pop()}
{
}
{object_push(geom)}
{
first = 0
tobj = new GeoSpec(2)
tobj.value = 100
bild.topol.slist.object(0).geo.append(tobj)
tobj = new GeoSpec(4)
tobj.value = 1
bild.topol.slist.object(0).geo.append(tobj)
set_default()
}
{object_pop()}
{
}
{object_push(memb)}
{first=0}
{
tobj = new GeoSpec(0)
tobj.value = 80
tobj.set_default()
tobj = new MStanWrap(tobj, 0)
bild.subsets.snlist.object(0).ml.append(tobj)
}
{
tobj = new GeoSpec(1)
tobj.value = 1
tobj.set_default()
tobj = new MStanWrap(tobj, 0)
bild.subsets.snlist.object(0).ml.append(tobj)
}
{
tobj = new MechanismStandard("pas")
tobj.set("g_pas", 3.33333e-05, 0)
tobj.set("e_pas", -70, 0)
tobj = new MStanWrap(tobj, 1)
bild.subsets.snlist.object(0).ml.append(tobj)
}
{object_pop()}
{
}
{object_push(manage)}
{
first = 0
classname = "Cell"
etop=1 esub=1 egeom=1 emem=1
itop=1 isub=0 igeom=0 imem=0
bild.topol.names_off = 0
bild.topol.circles_off = 0
output_index = 0  output_x = 1
}
{object_pop()}
{
cexport()
}
{object_pop()}
{
save_window_=ocbox_.tobj.gtopol
save_window_.size(-200,200,-150,150)
scene_vector_[3] = save_window_
ocbox_.tobj.gtopol = save_window_
save_window_.save_name("ocbox_.tobj.gtopol")
}
{object_push(ocbox_)}
stgui = new SynTypeGUI(1)
{object_push(stgui)}
{
tobj = new MechanismStandard("DAsyn")
tobj.set("tau0", 100, 0)
tobj.set("tau1", 70, 0)
tobj.set("dur", 600, 0)
}
{append(tobj, "DAsyn")}
{object_pop()}
nrc = new NetReadyCell(tobj, stgui.stypelist)
nrc.name = "Cell"
tobj = nrc.cb.topol.slist.object(0)
{nrc.synlist.append(new SynTypeInstance(nrc.stype.object[0],tobj,0.5,0.5,-1))}
{g.size(-166.667,166.667,-122.654,122.654)}
{object_pop()}
{
ocbox_.map("NetReadyCellGUI[0]", 6, 105, 404.16, 356.16)
}
objref ocbox_
//End NetReadyCellGUI[0]


//Begin NetGUI[0]
{
load_file("netbild.hoc")
}
{ocbox_ = new NetGUI(1)}
{object_push(ocbox_)}
{mapold2new = new Vector()  missing = new List()}
original_type("Cell")
original_type("R")
newnode(0, -61, 62)
newnode(1, -108, 63)
newedge(1, 0, 0, 0.4, 1)
{create_ = 1  create1()}
{g.size(-166.667,166.667,-124.997,124.997)}
{object_pop()}
{
ocbox_.map("NetGUI[0]", 6, 614, 528, 327.36)
}
objref ocbox_
//End NetGUI[0]

{
xpanel("RunControl", 0)
v_init = -70
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 2000
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.025
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
xcheckbox("Quiet",&stdrun_quiet,"")
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(486,22)
}
{
save_window_ = new Graph(0)
save_window_.size(0,2000,-80,40)
scene_vector_[5] = save_window_
{save_window_.view(0, -80, 2000, 120, 780, 22, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addvar("Cell_Cell[0].soma.v( 0.5 )", 1, 1, 0.451757, 0.943131, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,2000,1,1.4)
scene_vector_[6] = save_window_
{save_window_.view(0, 1, 2000, 0.4, 780, 287, 300.48, 200.32)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addvar("DAsyn[0].msg", 1, 1, 0.563578, 0.933546, 2)
}
objectvar scene_vector_[1]
{doNotify()}
